name: xprofile actions
on: workflow_dispatch
env:
  AWS_REGION: eu-west-3
jobs:
    Testing:
      runs-on: ubuntu-latest
      steps: 
        - name: Checkout my code
          uses: actions/checkout@v4.1.1

        - name: Maven test
          run: mvn test

        - name: Checkstyle
          run: mvn checkstyle:checkstyle
        
        # Setup java 11 to be default (sonar-scanner requierement as of 5.x)
        - name: Set java 11
          uses: actions/setup-java@v3
          with:
            distribution: 'temurin'
            java-version: '11'

        # Setup sonar-scanner
        - name: Setup SonarQube
          uses: warchant/setup-sonar-scanner@v7

        # Run sonar-scanner
        - name: SonarQube Scan
          run: sonar-scanner
              -Dsonar.host.url=${{ secrets.SONAR_URL }}
              -Dsonar.login=${{ secrets.SONAR_TOKEN }}
              -Dsonar.organization=${{ secrets.SONAR_ORG }}
              -Dsonar.projectKey=${{ secrets.SONAR_KEY }}
              -Dsonar.sources=src/
              -Dsonar.junit.reportsPath=target/surefire-reports/
              -Dsonar.jacoco.reportsPath=target/jacoco.exec
              -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
              -Dsonar.java.binaries=target/test-classes/com/visualpathit/account

        # Check the Quality Gate status.
        - name: SonarQube Quality Gate check
          id: sonarqube-quality-gate-check
          uses: sonarsource/sonarqube-quality-gate-action@master
          # Force to fail step after specific time.
          timeout-minutes: 5
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_URL }}

    Build_and_deploy:
        needs: Testing
        runs-on: ubuntu-latest
        steps: 
            - name: Code checkout
              uses: actions/checkout@v4.1.1

            - name: Update application properties file
              run: |
                sed -i "s/^jdbc.username.*$/jdbc.username\=${{ secrets.RDS_USER }}/" src/main/resources/application.properties
                sed -i "s/^jdbc.password.*$/jdbc.password\=${{ secrets.RDS_PASSWORD }}/" src/main/resources/application.properties
                sed -i "s/db01/${{ secrets.RDS_ENDPOINT }}/" src/main/resources/application.properties

            - name: upload image to ECR
              uses: appleboy/docker-ecr-action@master
              with:
                  access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
                  registry: ${{ secrets.REGISTRY }}
                  repo: xprofile
                  region: ${{ env.AWS_REGION}}
                  tags: latest, ${{ github.run_number}}
                  daemon_off: false
                  dockerfile: ./Dockerfile
                  context: ./
